@mixin make-units($preffix: '') {
  .units-row {
    @extend %clearfix;
    position: relative;
    margin: 0 0 $base-line;   
  }

  .unit {
    position: relative;
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-right: $grid-gutter-width / 2;
    padding-left: $grid-gutter-width / 2;
    float: left;

    @media only screen and (max-width: 767px) {
      width: 100%;
      float: none;
    }
  }

  @include loop-units($preffix, width);
  @include loop-units($preffix, pull);
  @include loop-units($preffix, push);
  @include loop-units($preffix, offset);
}

@mixin loop-units($preffix, $type) {
  @each $unit in $units {
    @include calc-unit($unit, $type, $preffix);
  }

  @each $unit, $name in $units-names {
    @include calc-unit($unit, $type, $preffix, $name);
  }
}

// Preffix should be like '-mobile'
@mixin calc-unit($unit, $type, $preffix: '', $name: $unit) {
  @if ($type == width) and ($unit > 0) {
    .unit#{$preffix}-#{$name} {
      width: get-unit-width($unit);
    }
  }

  @if ($type == push) {
    .unit#{$preffix}-push-#{$name} {
      left: get-unit-width($unit);
    }
  }

  @if ($type == pull) {
    .unit#{$preffix}-pull-#{$name} {
      right: get-unit-width($unit);
    }
  }

  @if ($type == offset) {
    .unit#{$preffix}-offset-#{$name} {
      margin-left: get-unit-width($unit);
    }
  }
}
