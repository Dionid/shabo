/// Set the arrow of element.
///
/// @name Arrow
/// @group mixins
/// @access public
///
/// @param {Side} $side - Arrow side (top, right, bottom, left)
/// @param {Color} $color [$arrow-color] - Arrow color
/// @see variables
/// @param {Length} $size [5px] - Arrow size
/// @param {Length} $offset [5px] - Offset position of the arrow.
/// For the top and bottom arrows offset calculated from the top.
/// Fot the left and right arrows offset calculated from the left.
///
/// @example scss - Usage with all paramaeters
///   .top-arrow {
///     @include arrow(top, #369, 7px, 15px);
///   }
///
/// @example css - CSS output
///   .top-arrow:after {
///     position: absolute;
///     bottom: 100%;
///     left: 15px;
///     width: 0;
///     height: 0;
///     border: solid transparent;
///     border-width: 7px;
///     border-bottom-color: #369;
///     content: ' ';
///     pointer-events: none;
///   }
///
/// @example scss - Usage with only two parameters
///   .right-arrow {
///     @include arrow(right, #F57);
///   }
///
/// @example css - CSS output
///   .right-arrow:after {
///     position: absolute;
///     left: 100%;
///     top: 5px;
///     width: 0;
///     height: 0;
///     border: solid transparent;
///     border-width: 5px;
///     border-bottom-color: #F57;
///     content: ' ';
///     pointer-events: none;
///   }
///
/// @example scss - Usage with specific parameters
///   .bottom-arrow {
///     @include arrow($side: bottom, $offset: 20px, $color: #692);
///   }
///
/// @example css - CSS output
///   .bottom-arrow:after {
///     position: absolute;
///     top: 100%;
///     left: 20px;
///     width: 0;
///     height: 0;
///     border: solid transparent;
///     border-width: 5px;
///     border-bottom-color: #692;
///     content: ' ';
///     pointer-events: none;
///   }
///
/// @example scss - Usage with only required parameter
///   .left-arrow {
///     @include arrow(left);
///   }
///
/// @example css - CSS output
///   .left-arrow:after {
///     position: absolute;
///     right: 100%;
///     top: 5px;
///     width: 0;
///     height: 0;
///     border: solid transparent;
///     border-width: 5px;
///     border-bottom-color: #fff;
///     content: ' ';
///     pointer-events: none;
///   }
@mixin arrow($side, $color: $arrow-color, $size: 5px, $offset: 5px) {
  $status: true;
  $side-property: '';
  $offset-property: '';

  // Allowed sides: top, right, bottom, left
  @if $side == top {
    $side-property: bottom;
    $offset-property: left;
  } @else if $side == right {
    $side-property: left;
    $offset-property: top;
  } @else if $side == bottom {
    $side-property: top;
    $offset-property: left;
  } @else if $side == left {
    $side-property: right;
    $offset-property: top;
  } @else {
    $status: flase;
    @warn "Side variable can accept one of the following values: top, right, bottom, left. Value passed: #{$side}";
  }

  @if $status == true and $side-property != '' and $offset-property != '' {
    &:after {
      position: absolute;
      #{$side-property}: 100%;
      #{$offset-property}: $offset;
      width: 0;
      height: 0;
      border: solid transparent;
      border-width: $size;
      border-bottom-color: $color;
      content: ' ';
      pointer-events: none;
    }
  }
}
